<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>x_58872_needit_needit</collection>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition/>
        <is_rest>false</is_rest>
        <message/>
        <name>NeedIt - When needed field date</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/) {

	// Script to be debugged; does not seem to be executed
	// See Server Side Scripting - Creating a Business Rule
	
	
	// 'rightnow' == Current date/time
	var rightnow = new GlideDateTime();
	jslog ("**************   rightnow == " + rightnow);
	
	// Create a GlideDateTime object fo rthe 'when needed' date
	var whenneeded = new GlideDateTime(current.u_when_needed);
	jslog ("**************** whenneeded == " + whenneeded);
	
	// If 'when needed' is in the past then display message and do not write record
	if (wnenNeeded.before(rigthnow)){
		gs.addErrorMessage("When needed cannot be in the past. Your request has not been saved.");
		current.setAbortAction(true);
	}
	
	// Do not allow requests to be reququested for the same day
	// *** Does not work ***
	var today = rightnow.getLocalDate();
	var istoday = whenNeeded.getLocalDate();
	
	jslog ("*************************************");
	jslog ("********************    today == " + today);
	jslog ("********************    istoday == " + istoday);
	jslog ("*************************************");
	
	// if (today.compareTo(istoday) == 0 ){
	//	gs.addErrorMessage("NeedIt requests cannot be requested for Today.");
	//	current.setAbortAction(true);
	//}

})(current, previous);]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2020-01-07 16:16:22</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>799af9081b920010fcc840c6cc4bcb0c</sys_id>
        <sys_mod_count>14</sys_mod_count>
        <sys_name>NeedIt - When needed field date</sys_name>
        <sys_overrides/>
        <sys_package display_value="NeedIt" source="x_58872_needit">6ead8e780f603200cd674f8ce1050ed1</sys_package>
        <sys_policy/>
        <sys_scope display_value="NeedIt">6ead8e780f603200cd674f8ce1050ed1</sys_scope>
        <sys_update_name>sys_script_799af9081b920010fcc840c6cc4bcb0c</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2020-01-07 20:26:57</sys_updated_on>
        <template/>
        <when>before</when>
    </sys_script>
    <sys_translated_text action="delete_multiple" query="documentkey=799af9081b920010fcc840c6cc4bcb0c"/>
</record_update>
